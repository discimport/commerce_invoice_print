<?php
/**
 * Implements hook_menu().
 */
function commerce_invoice_receipt_menu() {
  $items = array();
  
  $items['admin/commerce/orders/%commerce_order/invoice'] = array(
    'title' => 'Invoice',
    'page callback' => 'commerce_invoice_receipt_view',
    'page arguments' => array(3),
    'access callback' => 'commerce_order_access',
    'access arguments' => array('view', 3),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'commerce_invoice_receipt.admin.inc',
  );

  $items['admin/commerce/orders/%commerce_order/invoice/view'] = array(
    'title' => 'View Invoice',
    'page callback' => 'commerce_invoice_receipt_view',
    'page arguments' => array(3),
    'access callback' => 'commerce_order_access',
    'access arguments' => array('view', 3),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'parent' => 'admin/commerce/orders/%commerce_order/invoice',
    'weight' => 0,
    'file' => 'commerce_invoice_receipt.admin.inc',
  );

  $items['admin/commerce/orders/%commerce_order/invoice/print'] = array(
    'title' => 'Printable Invoice',
    'page callback' => 'commerce_invoice_receipt_view_print',
    'page arguments' => array(3),
    'access callback' => 'commerce_order_access',
    'access arguments' => array('view', 3),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'parent' => 'admin/commerce/orders/%commerce_order/invoice',
    'file' => 'commerce_invoice_receipt.admin.inc',
  );

  $items['admin/commerce/orders/%commerce_order/invoice/mail'] = array(
    'title' => 'Mail Invoice',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_invoice_receipt_mail_form', 3),
    'access callback' => 'commerce_order_access',
    'access arguments' => array('view', 3),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'parent' => 'admin/commerce/orders/%commerce_order/invoice',
    'file' => 'commerce_invoice_receipt.admin.inc',
  );
  
  return $items;
}

/**
 * Generate an array for rendering the given order.
 *
 * @param $order
 *   A fully loaded order object.
 * @param $view_mode
 *   The view mode for displaying the order, 'invoice'.
 *
 * @return
 *   An array as expected by drupal_render().
 */
function commerce_invoice_receipt_view($order, $view_mode = 'administrator', $breadcrumb = TRUE) {
  drupal_add_css(drupal_get_path('module', 'commerce_invoice_receipt') . '/theme/commerce_invoice_receipt.css');
  
  return entity_view('commerce_order', array($order->order_id => $order), $view_mode, NULL, TRUE);
}

function commerce_invoice_receipt_view_print($order, $view_mode = 'administrator', $breadcrumb = TRUE) {
  drupal_add_css(drupal_get_path('module', 'commerce_invoice_receipt') . '/theme/commerce_invoice_receipt.css');

  $build = entity_view('commerce_order', array($order->order_id => $order), $view_mode, NULL, TRUE);

  $invoice_info = _commerce_invoice_receipt_get_invoice_info($order, $build);

  print theme('commerce_order_invoice_view', array('invoice_info' => $invoice_info, 'order' => $order));
}

/**
 * Implements hook_entity_info_alter().
 */
function commerce_invoice_receipt_entity_info_alter(&$entity_info) {
  $entity_info['commerce_order']['view modes']['invoice'] = array(
    'label' => t('Invoice/Receipt'),
    'custom settings' => TRUE,
  );
}

/**
* Implements hook_theme().
*/
function commerce_invoice_receipt_theme() {
  return array(
    'commerce_order_invoice_view' => array(
      'variables' => array('invoice_info' => NULL, 'order' => NULL),
      'path' => drupal_get_path('module', 'commerce_invoice_receipt') . '/theme',
      'template' => 'commerce-order-invoice-view',
    ),
  );
}

/**
* Implements hook_mail().
*/
function commerce_invoice_receipt_mail($key, &$message, $params) {
  $langcode = isset($message['language']) ? $message['language']->language : NULL;
  $options = array(
    'langcode' => $langcode,
    'context' => '',
  );

  switch($key) {
    // Setup an e-mailed invoice.
    case 'invoice':
      $build = entity_view('commerce_order', array($params['order']->order_id => $params['order']), 'invoice', NULL, TRUE);
      $invoice_info = _commerce_invoice_receipt_get_invoice_info($params['order'], $build);

      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed;';
      $message['subject'] = t('Your Order Invoice', array(), $options);
      $message['body'][] = theme('commerce_order_invoice_view', array('invoice_info' => $invoice_info, 'order' => $params['order']));
      break;
  }
}